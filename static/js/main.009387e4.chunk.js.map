{"version":3,"sources":["components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","Searchbox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOA0BeA,EAvBE,SAAC,GAAa,EAAZC,OAGjB,MAAM,IAAIC,MAAM,gBCQHC,EAZE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,OACC,qBAAKC,UAAW,MAAhB,SACC,uBACAA,UAAY,mCACZC,KAAM,SACNC,YAAa,gBACbC,SAAYJ,OCCAK,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAkBC,OAAQ,SAAnE,SACEJ,EAAMK,YCgBKC,G,wDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAO,CACXC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DAEDG,KAAKX,MAAMK,a,GAhBOQ,cC8CZC,E,kDAxCd,aAAc,IAAD,8BACZ,gBAaDC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAbxC,EAAKZ,MAAQ,CACZhB,OAAO,GACP0B,YAAa,IAJF,E,qDAQb,WAAqB,IAAD,OACjBG,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAU,CAACrB,OAAQiC,S,oBAO3C,WACC,MAA8Bb,KAAKJ,MAA5BhB,EAAP,EAAOA,OAAQ0B,EAAf,EAAeA,YACTQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAMC,KAAKC,cAAcC,SAASb,EAAYY,kBAEtD,OAAQtC,EAAOwC,OAGd,sBAAKpC,UAAU,KAAf,UACC,oBAAIA,UAAY,KAAhB,0BACA,cAAC,EAAD,CAAWD,aAAeiB,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUxB,OAAUkC,WAPtB,8C,GAzBeZ,aCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAK/CX,M","file":"static/js/main.009387e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\t\r\n\tif(true){\r\n\t\tthrow new Error('Nooooooooo!')\r\n\t}\r\n\r\n\treturn(\r\n\t \t<div>\r\n\t\t {\r\n\t\t \trobots.map((user,i) => {\r\n\t\treturn (\r\n\t\t<Card \r\n\t\t\tkey={i}\r\n\t\t\tid = {robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail ={robots[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n }\r\n  </div>  \r\n);\r\n}\r\nexport default CardList; \r\n","import React from 'react'; \r\n\r\nconst Searchbox =({searchChange}) =>{\r\n\treturn(\r\n\t\t<div className ='pa2'> \r\n\t\t\t<input \r\n\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype ='search' \r\n\t\t\tplaceholder ='search robots'\r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\t\t\r\n\t);\r\n}\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll',border: '1px solid black',height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\nexport default Scroll; ","import React,{Component} from 'react'; \r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> OOOOps That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children \r\n\t}\r\n}\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots:[],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    \t.then(response=> response.json())  \t\r\n    \t.then(users => this.setState ({robots: users}))\r\n  }\r\n\r\n\tonSearchChange=(event)=>{\r\n\t\tthis.setState({searchfield:event.target.value})\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots, searchfield} = this.state; \r\n\t\tconst filteredRobots = robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\treturn !robots.length?\r\n\t\t\t<h1>Loading </h1>:\r\n\t\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className = 'f2'>RobotFriends</h1>\r\n\t\t\t\t<Searchbox searchChange ={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t<CardList robots = {filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\r\n\t\t\r\n\t}\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}